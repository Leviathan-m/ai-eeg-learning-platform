[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-eeg-learning-platform"
version = "0.1.0"
description = "AI-powered adaptive learning platform using real-time EEG analysis"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
authors = [
    {name = "AI-EEG Learning Platform Team", email = "contact@example.com"},
]
maintainers = [
    {name = "AI-EEG Learning Platform Team", email = "contact@example.com"},
]
keywords = [
    "EEG", "adaptive-learning", "machine-learning", "neuroscience",
    "cognitive-load", "education", "real-time-analysis"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Education",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.0",
    "aiofiles>=23.2.1",
    "httpx>=0.25.0",
    "structlog>=23.2.0",
    "numpy>=1.24.0",
    "pandas>=2.1.0",
    "scipy>=1.11.0",
    "scikit-learn>=1.3.0",
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "mne>=1.6.0",
    "pyedflib>=0.1.30",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "plotly>=5.17.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=23.12.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "ruff>=0.1.0",
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinxcontrib-openapi>=0.8.0",
    "myst-parser>=2.0.0",
]
ml = [
    "transformers>=4.36.0",
    "datasets>=2.15.0",
    "accelerate>=0.25.0",
    "wandb>=0.16.0",
    "mlflow>=2.9.0",
    "dvc>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/Leviathan-m/ai-eeg-learning-platform"
Documentation = "https://github.com/Leviathan-m/ai-eeg-learning-platform#readme"
Repository = "https://github.com/Leviathan-m/ai-eeg-learning-platform"
Issues = "https://github.com/Leviathan-m/ai-eeg-learning-platform/issues"
Changelog = "https://github.com/Leviathan-m/ai-eeg-learning-platform/blob/master/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["backend"]
include = ["*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend"]
skip = ["__init__.py"]

# Mypy disabled for integration-heavy backend
# [tool.mypy]
# python_version = "3.11"
# ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.4"
addopts = "-ra -q --strict-markers --strict-config --cov=backend --cov-report=term-missing --cov-report=xml --cov-fail-under=80"
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "e2e: End-to-end tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "backend/main.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
